-if params[:q] != nil
  -filters = []
  -search = ""
  -raw_query = params[:q].split("")
  -inQuote = FALSE
  -raw_query.each_with_index do |char,index|
    -if char == "#{"\""}" && !inQuote
      -inQuote = TRUE
    -elsif char == " " && inQuote
      -raw_query[index] = "_"
    -elsif char == "#{"\""}" && inQuote
      -inQuote = FALSE
  -query = raw_query.join.split(" ")
  -query.each do |term|
    -term = term.gsub("_"," ")
    -if !term.include? ":"
      -search = search + " " + term
    -else
      -if (term.include? "user:") || (term.include? "owner:") || (term.include? "creator:") || (term.include? "updater:") || (term.include? "description:") || (term.include? "lang:") || (term.include? "tags:") ||  (term.include? "title:")
        -if filters.include? term
          -next
        -else
          -filters.push(term)
      -else
        -search = search + " " + term
  div class=(filters.length > 0? "super-container" : "super-container no-filter")
    div.content-container
      div.sub-container
        h1.search-title Search Results
        form.navbar-form.navbar-right id="bigSearchBar" action="/notebooks" role="search"
          div.form-group
            input id="advancedSearch" name="q" type="hidden"
            input.searchFieldBox.form-control placeholder="Search" type="search" value="#{search.strip}" tabindex="0"
            input name="sort" type="hidden" value="score"
            button.btn.search-submit tabindex="0"
              span.glyphicon.glyphicon-search
                span.sr-only Search
        div.search-filters-super-container
          div.search-filters-container style=(filters.length == 0? "display: none" : "")
            p.search-filters
              strong
                | Filters
                span aria-hidden="true" #{":"}
              div.tokenfield
                -filters.each do |filter|
                  div.token
                    span.token-label ==filter
                    span.sr-only #{" "}
                    a.close.tooltips href="#" tab-index="-1" title="Delete search filter"
                      span aria-hidden="true" &times;
                      span.sr-only Delete search filter of "#{filter}"
  div.content-container.filter-container
    div.dots
      form id="addFilterForm" style="display: none"
        div
          strong
            | Filter
            span aria-hidden="true" #{":"}
          select.form-control.sortDropDown id="filterFormType"
            option value="user" User
            option value="owner" Owner
            option value="creator" Creator
            option value="updater" Updater
            option value="description" Description
            option value="language" Language
            option value="title" Title
            option value="tags" Tag
        div
          strong
            | Value
            span aria-hidden="true" #{":"}
          input.form-control id="filterFormValue" type="text" minlength="2" placeholder="Filter"
        button.btn.btn-primary id="filterFormSubmit" type="submit" Add Filter
      a id="filterToggle" href="#" type="button"
        span.tooltips title="Toggle Search Filter Form" aria-hidden="true" ...
        span.sr-only Toggle Search Filter Form

-if !flash.empty?
  div.content-container
    -flash.each do |key, value|
      div class="alert alert-#{key} content-body-alert" role="alert"
        -if key == "success"
          i.fa.fa-check-circle aria-hidden="true"
        -elsif key == "error"
          i.fa.fa-times-circle aria-hidden="true"
        -elsif key == "info"
          i.fa.fa-info-circle aria-hidden="true"
        -elsif key == "warning"
          i.fa.fa-exclamation-triangle aria-hidden="true"
        ==value
        button.close aria-hidden="false" aria-label="Close" data-dismiss="alert" type="button" &times;
      hr.hidden
-if @notebooks.empty?
  div.content-container
    div.no-notebooks
      div.sad-face.show aria-hidden="true" style="display: none"
        | :-(
      | Sorry, no notebooks found
-else
  div.content-container
    div.searchResults
      table id="searchTable"
        caption.sr-only Metadata Search Results
        thead
          tr
            -if @tags != nil && @tags.length > 0
              th.searchHeader Tags
            th.searchHeader Total Notebooks
            -if @groups != nil && @groups.length > 0
              th.searchHeader Groups
            th.searchHeader Sort
        tbody
          tr
            -if @tags != nil && @tags.length > 0
              td.sortData
                -unless @tags.blank?
                  -@tags.each do |tag, count|
                    a.searchTag href="/tags/#{tag}"
                      span.label.tag style =="background-color: #{color_for(tag)}" ==tag
            td.sortData
              input type="hidden" id="sortHidden" value="#{params[:sort] || "trendiness"}"
              -counter = ((params["page"]&.to_i || 1) - 1) * Notebook.per_page
              -total = defined?(@notebooks.total_entries) ? @notebooks.total_entries : "?"
              -unless @notebooks.empty? or defined? suggested_view
                p #{@notebooks.total_entries} notebooks
            -if @groups != nil && @groups.length > 0
              td.sortData
                -unless @groups.blank?
                  ul.groupSearches
                    -@groups.first(3).each do |group, count|
                      li.groupSearchResults
                        a.searchResultsGroup href="#{url_for(group)}"
                          span.tooltips.join title="#{count} notebooks = #{group.description}" #{group.name}
            td.sortData
              -unless @notebooks.empty? or defined? suggested_view
                form id="sortResultsForm" method="get"
                  select.form-control.sortDropDown id="sort" name="sort"
                    option value="trendiness" id="trendiness" Trending
                    option value="created_at" id="created_at" Recently Created
                    option value="updated_at" id="updated_at" Recently Updated
                    option value="title" id="title" Title
                    option value="views" id="views" Most Views
                    option value="stars" id="stars" Most Stars
                    option value="runs" id="runs" Most Runs
                    option value="score" id="score" Relevance
                  -params.each do |key, value|
                    -next if %w(id sort ascending splat captures controller action partial_name).include?(key)
                    -if value != nil
                      input type="hidden" name==CGI.escape_html(key) value==CGI.escape_html(value)
                    -else
                      input type="hidden" name==CGI.escape_html(key)

    -if defined? group_view
      ==render partial: "notebook_listings", locals: { group_view: group_view }
    -else
      ==render partial: "notebook_listings"
    -if @notebooks.respond_to? :total_pages
      nav.center
        -if request.path != "/beta_home_notebooks"
          ==will_paginate @notebooks, renderer: BootstrapPagination::Rails
        -elsif @notebooks.length >= 20
          ul.pagination
            li.next
              -param = request.original_fullpath.split("?")[1]
              -if param == "type=mine"
                a rel="next" href="#{user_path(@user)}?page=2" See More
              -elsif param == "type=recent"
                a rel="next" href="/notebooks?page=2&sort=created_at" See More
              -elsif param == "type=stars"
                a rel="next" href="/notebooks/stars/?page=2&sort=stars" See More
              -else
                a rel="next" href="/notebooks?page=2&#{param}" See More

-deprecated_notebook = DeprecatedNotebook.find_by(notebook_id: @notebook.id)
div.banner.deprecation-banner
  div.content-container
    p.deprecation-header
      strong
        | Deprecated Notebook
        span aria-hidden="true" #{":"}
      span
        -if deprecated_notebook.disable_usage == TRUE
          '  Notebook is deprecated and has been disabled due to being too high risk.
        -else
          '  Notebook is deprecated and has a state of "use at your own risk".
      -if @user.admin? || @user.can_edit?(@notebook, true)
        a.remove-deprecation-status href="#"
          | Remove Deprecation Status
    br
    div.deprecation-metadata-container
      strong
        | Deprecated by
        span aria-hidden="true" #{":"}
      span #{" "}
      ==link_to_user(User.find(deprecated_notebook.deprecater_user_id))
      span #{" "}
      time.tooltips.tooltip-right.tooltipstered title="#{deprecated_notebook.created_at.strftime('%A, %B %d, %Y %H:%M UTC')}"
        | #{time_ago_in_words(deprecated_notebook.created_at)} ago
      br
      strong
        | Reasoning
        span aria-hidden="true" #{":"}
      span
        |  #{deprecated_notebook.reasoning}
      br
      -if deprecated_notebook.alternate_notebook_ids != nil
        -alternate_notebooks = JSON.parse(deprecated_notebook.alternate_notebook_ids)
        -if alternate_notebooks.length > 0
          strong
            -if alternate_notebooks.length == 1
              | Alternate Notebook
            -else
              | Alternate Notebooks
            span aria-hidden="true" #{":"}
          ul
            -alternate_notebooks.each do |id|
              li
                a href="#{notebook_path(Notebook.find(id))}" #{notebook_path(Notebook.find(id))}
